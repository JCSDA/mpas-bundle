(C) Copyright 2017 UCAR

This software is licensed under the terms of the Apache Licence Version 2.0
which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.

# MPAS-Bundle specific Instruction (4/5/2018)
--- Building the MPAS/JEDI bundle in Singularity environment ---
    cd /some/where/to/store/soure/code  or  /home/vagrant as a default
    git clone https://github.com/JCSDA/mpas-bundle.git

    modify and excute ./mpas-bundle/build_mpas.csh file
         This script contains all the build.
         Modify REL_DIR as /some/where/to/store/soure/code or default
         Set the variables below as 1 (do) or 0(skip)
             set comp_pio2=1     # Get and build a PIO2 library
             set comp_mpas=1     # Get and build MPAS model
             set libr_mpas=1     # Make a MPAS library to be used in MPAS/OOPS
             set oops_mpas=1     # clone and build a mpas-bundle
             set get_data=1      # Download and place test dataset, link UFO data
             set test_mpas=1     # launch a ctest
         Note: Above steps are all required at least once (in order).
               Main step to build a mpas-bundle is "set oops_mpas=1".

 
# General Instruction 
#--- Building the MPAS/JEDI bundle ---
#
#    cd /somewhere/to/store/source/code
#    git clone https://github.com/JCSDA/mpas-bundle.git
#
#    cd /somewhere/to/build
#    ecbuild /somewhere/to/store/source/code/mpas-bundle
#    make -j4

The ecbuild command above will clone all the source code for the projects defined in the
CMakeLists.txt in the bundle and the make command will build them all.

To work with a different branch than the default for a given project, the branch must be
modified in the CMakeLists.txt for the bundle.

Note: ecbuild accepts all cmake flags, for example, compilers can be selected with:
    ecbuild -DCMAKE_CXX_COMPILER=/path/to/gcc-7.2/bin/g++ ${SRC}

For testing (from build directory):

    ctest

--- Working with the code ---

The CMakeLists.txt file in this directory contains the list of the repositories included
in the bundle and the branch to be used. The branch specified in the CMakeLists.txt is
the one that will be compiled. When working with you own branch, the should be changed in
the CMakeLists.txt file but it is not necessary to re-run ecbuild, make is enough.

After the fisrt build, changes in the code can be tested by re-running only
(from build directory):

    make -j4
    ctest

By default, make will not update your local repository from the remote. To update all repositories
in the bundle, run:

    make update

The update will fail for repositories that contain uncommited code. This is a safety mechanism to
avoid losing your work.

--- Note about using git ---

It is recommended that you create a .gitconfig file in your home directory (inside the container
if working from a container) with the following content:

$ cat .gitconfig 
[user]
    name = Your Name
    email = yourname@somewhere.something

[credential]
    helper = cache --timeout=3600


Since the bundle acceses many repositories, it can be tedious to enter your username and
password for every operation. With the last line the system will remember your password for
a given time (defined in seconds by the timeout parameter).

